//Project service
app.factory('projectService', [function() {
  let iconsDataObject = {angularjs: "./Images/angularjs_icon.png", php: "./Images/php_icon.svg", css: "./Images/css_icon.svg", js: "./Images/javascript_icon.svg", assembly: "./Images/assembly_icon.svg", justinmind: "./Images/justinmind_icon.svg", balsamiq: "./Images/balsamiq_icon.png", java: "./Images/java_icon.svg", c: "./Images/c_icon.svg", docker: "./Images/docker_icon.svg", ts: "./Images/typescript_icon.svg", html: "./Images/html_icon.svg", sass: "./Images/sass_icon.svg"};
  let projectDataArray = [
    {id: 1, name: "Modelo", src: ["./Images/php_icon.svg", "./Images/angularjs_icon2.png",  "./Images/css_icon.svg", "./Images/javascript_icon.svg"], solo: "solo", scratch: "from scratch", desc: "Modelo is a website where models, actors and talent can register themselves by filling out various criterion and upload a portfolio. Casting agenices or individuals can make their profiles too and browse through all the registered models to find a right fit. There are various criterion to search for an appropriate model for the job. Later in the development phase, a new feature was added: Audition pages. Casting agenices could create an audition specifying their requirements, and any model could upload and submit the required audition video or images, which would then later be available to the casting agency to review and select. Casting agencies or individuals could also create lists where they could save models for later opportunities.", stack: ["HTML5", "CSS3", "JavaScript", "AngularJS (Angular 1.x)", "PHP", "MySQL", "SQL"], video: ""},
    {id: 2, name: "MIPS Game", src: ["./Images/assembly_icon.png", "", "", ""], solo: "solo", scratch: "from scratch", desc: "Using purely the MIPS assembly language (.asm), I created a pixelated game where a user controls a spaceship and needs to destroy or evade a continous rain of obstacles in order to gain a higher score. It was run on a JAVA MIPS emulator, known as MARS. More details can be found in the video.", stack: ["MIPS Assembly Language"], video: "https://www.youtube.com/embed/qlywsafVgX8"},
    {id: 3, name: "Social Media for Seniors", src: ["./Images/justinmind_icon.svg", "", "./Images/balsamiq_icon.png", ""], solo: "group", scratch: "from scratch", desc: "As part of a Human Computer Interaction (HCI) project, my team and I designed a social media mobile app for senior citizens. A lot of research was conducted in relation to social media and senior citizens and a senior citizen friendly UI/UX was created.", stack: ["JustInMind", "Balsamiq", "Other wireframe tools"], video: ""},
    {id: 4, name: "Linux Shell", src: ["./Images/java_icon.svg", "", "", ""], solo: "group", scratch: "from scratch", desc: "Using purely JAVA, my team and I created a mock Linux shell which supported popular unix commands like mkdir, cat, curl etc. A replica of a file system was created in JAVA through Object-Oriented programming.", stack: ["JAVA"], video: ""},
    {id: 8, name: "InSight", src: ["./Images/angularjs_icon2.png", "./Images/nodejs_icon.png", "./Images/html_icon.svg", "./Images/python_icon.png"], solo: "group", scratch: "from scratch", desc: "For Univeristy of Waterloo's yearly hackathon 'Hack The North', my team and I developed a web-app where a user could upload a photo, receive a score out of 100 to indicate how successful this photo would be on social media, receive relevant hashtags for the image, and suggestions on how to improve the image. The image could then be posted on the desired social media platform using the Hootsuite API. A lot of research was conducted and the Google Cloud Vision API was used to get an appropriate score. Please see the video for more details.", stack: ["HTML5", "CSS3", "SCSS", "AngularJS (Angular 1.x)", "JavaScript", "Node.js", "Python", "NPM"], video: "https://www.youtube.com/embed/AreZs5q1Gtc"},
    {id: 7, name: "Selenium Insta Bots", src: ["./Images/python_icon.png", "", "", ""], solo: "solo", scratch: "from scratch", desc: "Using Python3 and the Selenium Web Driver (in Python), I created various Instagram bots. One such example is: given a username and password and a target account, the program would automatically open the desired web browser, consequently log into Instagram, naviagte to the target account page, like all the posts and then close the browser window and end the program. Another example is: given a username and password, the bot would open the desired browser, scan through all of the given account's followers, and create a text file in the same directory listing all the accounts the given account's followers follow, then consequently close the browser and end the program. Many other similar interesting bots were created related to follower statistics and more.", stack: ["Python", "Selenium"], video: ""},
    {id: 5, name: "Pintos", src: ["./Images/c_icon.svg", "", "./Images/docker_icon.svg", ""], solo: "group", scratch: "existing", desc: "As part of a college project, my team and I developed portions of a simplified operating system (skeleton) known as Pintos which is closely related to Linux. Tasks included developing kernel threads, system calls, virtual memory, file system etc. The entire development was done in C language and parts of it in assembly language (x86)", stack: ["C", "x86 Assembly Language", "Docker"], video: ""},
    {id: 6, name: "BlueBoard", src: ["./Images/angularjs_icon.png", "./Images/typescript_icon.svg", "./Images/html_icon.svg", "./Images/sass_icon.svg"], solo: "group", scratch: "existing", desc: "Working as a Front End developer at UTSC's Live Competition, I helped develop the front end of the LIVE Competition website where the LIVE Competition is yearly held online. I majorly worked in Angular 8 with TypeScript along with RxJS, HTML5, CSS3 with SCSS and Bootstrap.", stack: ["Angular 8", "TypeScript", "HTML5", "SCSS", "CSS3", "Bootstrap"], video: ""}
  ];
  var projectObj = {};
  projectObj.getProjectData = () => {return projectDataArray;};
  projectObj.getIconsData = () => {return iconsDataObject;};
  return projectObj;
}]);
